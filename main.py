import aiogram
from aiogram import filters, types, Bot, Dispatcher, F
import asyncio
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
import re


class Reg(StatesGroup):
    contact = State()


class Cards(StatesGroup):
    humo = State()  
    uzcard = State()


bot = Bot(token='7429834785:AAFfTbGIkbifAkdMqAKjN_QYJrH5q7ewnMw')
dp = Dispatcher(bot=bot)

grocery_basket = []

contact_buttons1 = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç', request_contact=True)]],
    resize_keyboard=True
)

back2 = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text='üîô –ù–∞–∑–∞–¥')]],
    resize_keyboard=True
)

drink_food1 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='–ï–¥–∞'), KeyboardButton(text='–ù–∞–ø–∏—Ç–∫–∏')],
        [KeyboardButton(text='üîô –ù–∞–∑–∞–¥')]
    ],
    resize_keyboard=True
)

food1 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='ü´ì –õ–∞–≤–∞—à')],
        [KeyboardButton(text='üå≠ –•–æ—Ç-–¥–æ–≥'), KeyboardButton(text='üçï –ü–∏—Ü—Ü–∞')],
        [KeyboardButton(text='ü•™ –°—ç–Ω–¥–≤–∏—á'), KeyboardButton(text='üåÆ –¢–∞–∫–æ')],
        [KeyboardButton(text='üçú –°—É–ø')],
        [KeyboardButton(text='üîô –ù–∞–∑–∞–¥')]
    ],
    resize_keyboard=True
)

drink1 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='ü•§ –í–æ–¥–∞')],
        [KeyboardButton(text='üçπ –°–º—É–∑–∏'), KeyboardButton(text='üçµ –ó–µ–ª–µ–Ω—ã–π —á–∞–π')],
        [KeyboardButton(text='ü´ñ –ß–µ—Ä–Ω—ã–π —á–∞–π'), KeyboardButton(text='üßã –ë–æ–±–∞ —á–∞–π')],
        [KeyboardButton(text='‚òï –ö–æ—Ñ—Ñ–µ')],
        [KeyboardButton(text='üîô –ù–∞–∑–∞–¥')]
    ],
    resize_keyboard=True
)

sure1 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='‚úîÔ∏è –î–∞'), KeyboardButton(text='‚ùå –ù–µ—Ç')]
    ],
    resize_keyboard=True
)

main_menu1 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='üçΩ –ú–µ–Ω—é')],
        [KeyboardButton(text='üõí –ö–æ—Ä–∑–∏–Ω–∞'), KeyboardButton(text='‚ÑπÔ∏è –û –Ω–∞—Å')],
        [KeyboardButton(text='üë§ –ú–æ—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'), KeyboardButton(text='üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞')],
        [KeyboardButton(text='üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫')]
    ],
    resize_keyboard=True
)

languages1 = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='üóΩ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π', callback_data='english'),
         InlineKeyboardButton(text='ü™Ü –†—É—Å—Å–∫–∏–π', callback_data='russian')]
    ],
    resize_keyboard=True
)

buy_buttons1 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='‚úîÔ∏è –ö—É–ø–∏—Ç—å –≤—Å—ë'), KeyboardButton(text='‚ùå –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É')],
        [KeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥')]
    ],
    resize_keyboard=True
)

cards1 = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='Humo', callback_data='humo'),
         InlineKeyboardButton(text='UzCard', callback_data='uzcard')]
    ],
    resize_keyboard=True
)

contact_buttons = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text='Send your Contact', request_contact=True)]],
    resize_keyboard=True
)

back1 = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text='üîô Back')]],
    resize_keyboard=True
)

drink_food = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='Food'), KeyboardButton(text='Drink')],
        [KeyboardButton(text='üîô Back')]
    ],
    resize_keyboard=True
)

food = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='ü´ì Lavash')],
        [KeyboardButton(text='üå≠ Hotdog'), KeyboardButton(text='üçï Pizza')],
        [KeyboardButton(text='ü•™ Sandvich'), KeyboardButton(text='üåÆ Taco')],
        [KeyboardButton(text='üçú Soup')],
        [KeyboardButton(text='üîô Back')]
    ],
    resize_keyboard=True
)

drink = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='ü•§ Water')],
        [KeyboardButton(text='üçπ Smoozy'), KeyboardButton(text='üçµ Green Tea')],
        [KeyboardButton(text='ü´ñ Black Tea'), KeyboardButton(text='üßã Bubble Tea')],
        [KeyboardButton(text='‚òï Coffe')],
        [KeyboardButton(text='üîô Back')]
    ],
    resize_keyboard=True
)

sure = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='‚úîÔ∏è Yes'), KeyboardButton(text='‚ùå No')]
    ],
    resize_keyboard=True
)

main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='Menu')],
        [KeyboardButton(text='Grocery Basket'), KeyboardButton(text='About Us')],
        [KeyboardButton(text='My Information'), KeyboardButton(text='Support')],
        [KeyboardButton(text='Change Language')]
    ],
    resize_keyboard=True
)

languages = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='üóΩ English Language', callback_data='english'),
         InlineKeyboardButton(text='ü™Ü –†—É—Å—Å–∫–∏–π –Ø–∑—ã–∫', callback_data='russian')]
    ],
    resize_keyboard=True
)

buy_buttons = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='‚úîÔ∏è Buy All Things'), KeyboardButton(text='‚ùå Clear Basket')],
        [KeyboardButton(text='‚¨ÖÔ∏è Back')]
    ],
    resize_keyboard=True
)

cards = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='Humo', callback_data='humo'),
         InlineKeyboardButton(text='UzCard', callback_data='uzcard')]
    ],
    resize_keyboard=True
)


@dp.message(filters.Command("start"))
async def start(message: types.Message, state: FSMContext):
    await state.set_state(Reg.contact)
    await message.answer("Let\'s Start Registration | –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", reply_markup=contact_buttons)


@dp.message(Reg.contact)
async def send_contact(message: types.Message, state: FSMContext):
    await state.update_data(contact=message.contact)
    await message.answer(
        'Your Registration is Done. Pls choose language | –í–∞—à–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ ',
        reply_markup=languages)
    await state.clear()


@dp.callback_query(F.data == 'russian')
async def russian_callback(call: types.CallbackQuery):
    await call.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é.', reply_markup=main_menu1)


@dp.message(F.text == 'üîô –ù–∞–∑–∞–¥')
async def main_back1(message: types.Message):
    await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å', reply_markup=main_menu1)


@dp.message(F.text == '‚ÑπÔ∏è –û –Ω–∞—Å')
async def show_about_us1(message: types.Message):
    await message.answer(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–ë—ã—Å—Ç—Ä–æ–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ" - –∫–∞—Ñ–µ —Ñ–∞—Å—Ç—Ñ—É–¥–∞, –≥–¥–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ—Ç–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–æ! –ù–∞—à–µ –∫–∞—Ñ–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –∞–ø–ø–µ—Ç–∏—Ç–Ω—ã—Ö –∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏—Ö –±–ª—é–¥, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω—ã —Å –ª—é–±–æ–≤—å—é –∏ –∑–∞–±–æ—Ç–æ–π. –ü—Ä–∏ –ø–æ—Å–µ—â–µ–Ω–∏–∏ "–ë—ã—Å—Ç—Ä–æ–≥–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è" –≤—ã —Å—Ä–∞–∑—É –ø–æ—á—É–≤—Å—Ç–≤—É–µ—Ç–µ —É—é—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∏ –ø—Ä–∏–≤–µ—Ç–ª–∏–≤—É—é –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–æ–≤–∞—Ä–æ–≤ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É –≤ –∫–∞–∂–¥–æ–º –±–ª—é–¥–µ, —á—Ç–æ–±—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç—å —Å–∞–º—ã—Ö –≤–∑—ã—Å–∫–∞—Ç–µ–ª—å–Ω—ã—Ö –≥—É—Ä–º–∞–Ω–æ–≤.',
        reply_markup=back2)


@dp.message(F.text == 'üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫')
async def show_men1u(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ ü§ó", reply_markup=languages)


@dp.message(F.text == 'üë§ –ú–æ—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
async def show_info1(message: types.Message):
    user = message.from_user
    first_name = user.first_name
    last_name = user.last_name
    user_id = user.id

    await message.answer(f"–ò–º—è: {first_name}\n–§–∞–º–∏–ª–∏—è: {last_name}\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}", reply_markup=back2)


@dp.message(F.text == 'üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
async def show_suppor1t(message: types.Message):
    await message.answer('–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ --> @fptinker', reply_markup=back2)


@dp.message(F.text == 'üçΩ –ú–µ–Ω—é')
async def show_menu1(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ', reply_markup=drink_food1)


@dp.message(F.text == '–ï–¥–∞')
async def show_food1(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏–∏', reply_markup=food1)


@dp.message(F.text == '–ù–∞–ø–∏—Ç–∫–∏')
async def show_drink1(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏–∏', reply_markup=drink1)


@dp.message(F.text == 'ü´ì –õ–∞–≤–∞—à')
async def lavash1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://www.restoran-shafran.uz/image/cache/catalog/product/lavash-v-tandire-i-s-sirom-2-750x500.jpg',
        caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == 'üå≠ –•–æ—Ç-–¥–æ–≥')
async def hotdog1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://www.retail.ru/upload/content/pressreleases/9d7/10590ljvybo5pae5uw24nqeisf350qfx.png',
        caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == 'üçú –°—É–ø')
async def soup1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://avatars.dzeninfra.ru/get-zen_doc/1658056/pub_622ca738acc1c97a92fc6c5c_622ca7b9f53aef1fffd84c73/scale_1200',
        caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == 'ü•™ Sandvich')
async def soup1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(photo='https://s1.eda.ru/StaticContent/Photos/170228123352/210430170814/p_O.jpg',
                               caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == 'üçï –ü–∏—Ü—Ü–∞')
async def pizza1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://cdnn21.img.ria.ru/images/98976/61/989766135_0:105:2000:1230_1920x0_80_0_0_16a8fff0f23e9297155772f93b403aed.jpg',
        caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == 'üåÆ –¢–∞–∫–æ')
async def taco1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://avatars.dzeninfra.ru/get-zen_doc/8866523/pub_6489c8af5208a65c040f18a0_6489c8b5e7e228426ac1330f/scale_1200',
        caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == 'ü•§ –í–æ–¥–∞')
async def water1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://navruzint.com/wp-content/uploads/2023/02/sparkling_15-2.png',
        caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == 'üçπ –°–º—É–∑–∏')
async def beer1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://static.1000.menu/img/content-v2/cb/1d/58130/fruktovyi-smuzi-v-blendere_1629916238_11_max.jpg',
        caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == '‚òï –ö–æ—Ñ—Ñ–µ')
async def wine1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://pudov.ru/upload/resize_cache/webp/resize_cache/iblock/020/715_500_1/o51678i5ueznfsb9e1vym01mlxvva0nd.webp',
        caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == 'üçµ –ó–µ–ª–µ–Ω—ã–π —á–∞–π')
async def green_tea1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://d2jx2rerrg6sh3.cloudfront.net/images/news/ImageForNews_755721_16914865403343161.jpg',
        caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == 'ü´ñ –ß–µ—Ä–Ω—ã–π —á–∞–π')
async def black_tea1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(photo='https://mehtaperturk.com/wp-content/uploads/2022/04/turkish-tea.jpg.webp',
                               caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == 'üßã –ë–æ–±–∞ —á–∞–π')
async def bubble_tea1(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://cdn.shopify.com/s/files/1/2625/9204/files/bbt101_1024x1024.jpg?v=1540043903',
        caption='–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=sure1)


@dp.message(F.text == '‚úîÔ∏è –î–∞')
async def yes1(message: types.Message):
    await message.answer('–í—ã –¥–æ–±–∞–≤–∏–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É', reply_markup=drink_food1)


@dp.message(F.text == '‚ùå –ù–µ—Ç')
async def no1(message: types.Message):
    grocery_basket.pop()
    await message.answer('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ —á—Ç–æ-—Ç–æ –µ—â–µ', reply_markup=drink_food1)


@dp.message(F.text == 'üõí –ö–æ—Ä–∑–∏–Ω–∞')
async def basket1(message: types.Message):
    await message.answer(f'–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞: {grocery_basket}')
    await message.answer(f'–•–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã?', reply_markup=buy_buttons1)


@dp.message(F.text == '‚úîÔ∏è –ö—É–ø–∏—Ç—å –≤—Å—ë')
async def buy_all_thing1(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –∫–∞—Ä—Ç—É', reply_markup=cards1)


@dp.callback_query(F.data == 'humo')
async def cart_humo1(call: types.CallbackQuery, state: FSMContext):
    await state.set_state(Cards.humo)
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã Humo')


@dp.message(Cards.humo)
async def send_humo_card1(message: types.Message, state: FSMContext):
    card_number = message.text.strip()
    if re.match(r'^\d+$', card_number):
        await state.update_data(humo=card_number)
        await message.answer('–í–∞—à –∑–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è!', reply_markup=main_menu1)
        await state.clear()
    else:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).')


@dp.callback_query(F.data == 'uzcard')
async def cart_uzcard1(call: types.CallbackQuery, state: FSMContext):
    await state.set_state(Cards.uzcard)
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã UzCard')


@dp.message(Cards.uzcard)
async def send_uzcard1(message: types.Message, state: FSMContext):
    card_number = message.text.strip()
    if re.match(r'^\d+$', card_number):
        await state.update_data(cart_uzcard=card_number)
        await message.answer('–í–∞—à –∑–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è!', reply_markup=main_menu1)
        await state.clear()
    else:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).')


@dp.message(F.text == '‚ùå –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É')
async def clear_basket1(message: types.Message):
    grocery_basket.clear()
    await message.answer('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞', reply_markup=main_menu1)


@dp.message(F.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
async def double_back1(message: types.Message):
    await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ', reply_markup=main_menu1)


@dp.callback_query(F.data == 'english')
async def english_callback(call: types.CallbackQuery):
    await call.message.answer('Choose option.', reply_markup=main_menu)


@dp.message(F.text == 'üîô Back')
async def main_back(message: types.Message):
    await message.answer('You Came Back', reply_markup=main_menu)


@dp.message(F.text == 'About Us')
async def show_about_us(message: types.Message):
    await message.answer(
        'A bag that impresses! Within a year she became unsurpassed in her field. Discover the most impressive and innovative experience. We offer unique opportunities and incredible results. Join us and become part of the best!',
        reply_markup=back1)


@dp.message(F.text == 'Change Language')
async def show_menu(message: types.Message):
    await message.answer("Choose the language ü§ó", reply_markup=languages)


@dp.message(F.text == 'My Information')
async def show_info(message: types.Message):
    user = message.from_user
    first_name = user.first_name
    last_name = user.last_name
    user_id = user.id

    await message.answer(f"First Name: {first_name}\nLast Name: {last_name}\nUser ID: {user_id}", reply_markup=back1)


@dp.message(F.text == 'Support')
async def show_support(message: types.Message):
    await message.answer('If you have problems write here --> @fptinker', reply_markup=back1, )


@dp.message(F.text == 'Menu')
async def show_menu(message: types.Message):
    await message.answer('Choose what you want', reply_markup=drink_food, )


@dp.message(F.text == 'Food')
async def show_food(message: types.Message):
    await message.answer('Choose positions', reply_markup=food)


@dp.message(F.text == 'Drink')
async def show_food(message: types.Message):
    await message.answer('Choose positions', reply_markup=drink)


@dp.message(F.text == 'ü´ì Lavash')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://www.restoran-shafran.uz/image/cache/catalog/product/lavash-v-tandire-i-s-sirom-2-750x500.jpg',
        caption='You Sure?', reply_markup=sure)


@dp.message(F.text == 'üå≠ Hotdog')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://www.retail.ru/upload/content/pressreleases/9d7/10590ljvybo5pae5uw24nqeisf350qfx.png',
        caption='You Sure?', reply_markup=sure)


@dp.message(F.text == 'üçú Soup')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://avatars.dzeninfra.ru/get-zen_doc/1658056/pub_622ca738acc1c97a92fc6c5c_622ca7b9f53aef1fffd84c73/scale_1200',
        caption='You Sure?', reply_markup=sure)


@dp.message(F.text == 'üçï Pizza')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://cdnn21.img.ria.ru/images/98976/61/989766135_0:105:2000:1230_1920x0_80_0_0_16a8fff0f23e9297155772f93b403aed.jpg',
        caption='You Sure?', reply_markup=sure)


@dp.message(F.text == 'üåÆ Taco')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://avatars.dzeninfra.ru/get-zen_doc/8866523/pub_6489c8af5208a65c040f18a0_6489c8b5e7e228426ac1330f/scale_1200',
        caption='You Sure?', reply_markup=sure)


@dp.message(F.text == 'ü•§ Water')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://navruzint.com/wp-content/uploads/2023/02/sparkling_15-2.png', caption='You Sure?',
        reply_markup=sure)


@dp.message(F.text == 'üçπ Smoozy')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://static.1000.menu/img/content-v2/cb/1d/58130/fruktovyi-smuzi-v-blendere_1629916238_11_max.jpg',
        caption='You Sure?', reply_markup=sure)


@dp.message(F.text == '‚òï Coffe')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://www.osteria.ru/upload/iblock/d45/j3w7ifjxf4u8lqq0a7ivg1oj95ilemus/DSC02540.jpg',
        caption='You Sure?', reply_markup=sure)


@dp.message(F.text == 'üçµ Green Tea')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://d2jx2rerrg6sh3.cloudfront.net/images/news/ImageForNews_755721_16914865403343161.jpg',
        caption='You Sure?', reply_markup=sure)


@dp.message(F.text == 'ü´ñ Black Tea')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(photo='https://mehtaperturk.com/wp-content/uploads/2022/04/turkish-tea.jpg.webp',
                               caption='You Sure?', reply_markup=sure)


@dp.message(F.text == 'üßã Bubble Tea')
async def lavash(message: types.Message):
    grocery_basket.append(message.text)
    await message.answer_photo(
        photo='https://cdn.shopify.com/s/files/1/2625/9204/files/bbt101_1024x1024.jpg?v=1540043903',
        caption='You Sure?', reply_markup=sure)


@dp.message(F.text == '‚úîÔ∏è Yes')
async def lavash(message: types.Message):
    await message.answer('You Add to Buscket this product', reply_markup=drink_food)


@dp.message(F.text == '‚ùå No')
async def lavash(message: types.Message):
    await message.answer('Try find something else', reply_markup=drink_food)


@dp.message(F.text == 'Grocery Basket')
async def basket(message: types.Message):
    await message.answer(f'Your products{grocery_basket}')
    await message.answer(f'You wanna buy all produts?', reply_markup=buy_buttons)


@dp.message(F.text == '‚úîÔ∏è Buy All Things')
async def buy_all_thing(message: types.Message):
    await message.answer('Please choose your cart', reply_markup=cards)


@dp.callback_query(F.data == 'humo')
async def cart_humo(call: types.CallbackQuery, state: FSMContext):
    await state.set_state(Cards.humo)
    await call.message.answer('Enter your Humo card number')


@dp.message(Cards.humo)
async def send_humo_card(message: types.Message, state: FSMContext):
    card_number = message.text.strip()
    if re.match(r'^\d+$', card_number):
        await state.update_data(humo=card_number)
        await message.answer('Your food is delivering!', reply_markup=main_menu)
        await state.clear()
    else:
        await message.answer('Please enter a valid card number (digits only).')


@dp.callback_query(F.data == 'uzcard')
async def cart_uzcard(call: types.CallbackQuery, state: FSMContext):
    await state.set_state(Cards.uzcard)
    await call.message.answer('Enter your UzCard number')


@dp.message(Cards.uzcard)
async def send_uzcard(message: types.Message, state: FSMContext):
    card_number = message.text.strip()
    if re.match(r'^\d+$', card_number):
        await state.update_data(cart_uzcard=card_number)
        await message.answer('Your food is delivering!', reply_markup=main_menu)
        await state.clear()
    else:
        await message.answer('Please enter a valid card number (digits only).')


@dp.message(F.text == '‚ùå Clear Basket')
async def clear_busket(message: types.Message):
    grocery_basket.clear()
    await message.answer('Your basket is clear', reply_markup=main_menu)


@dp.message(F.text == '‚¨ÖÔ∏è Back')
async def double_back(message: types.Message):
    await message.answer(reply_markup=main_menu)


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
